name: Android Release

on:
  push:
    branches: [ "main" ]
    
  workflow_dispatch:

jobs:

  build:
    name: Create Android Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: upload-keystore.jks
          encodedString: ${{ secrets.KEYSTORE_BASE64 }}
      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: "12.x"
          cache: gradle
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.16.2"
          channel: 'stable'
          cache: true
      
      - name: Get dependencies
        run: flutter pub get

      - name: Start Android Release Build
        run: flutter build appbundle

      - name: Extract Package Name and Version
        id: extract_info
        run: |
          PACKAGE_NAME=$(grep -Po "applicationId\s+['\"]\K[^'\"]+" android/app/build.gradle)
          VERSION_NAME=$(grep -Po "version:\s+['\"]\K[^'\"]+" pubspec.yaml | cut -d '+' -f 1)
          BUILD_NUMBER=$(grep -Po "version:\s+['\"]\K[^'\"]+" pubspec.yaml | cut -d '+' -f 2)
          FILE_NAME="${PACKAGE_NAME}.v${VERSION_NAME}+${BUILD_NUMBER}.aab"
          echo "FILE_NAME=$FILE_NAME" >> $GITHUB_ENV
          echo "::set-output name=FILE_NAME::$FILE_NAME"

      - name: Rename Build File
        run: mv build/app/outputs/bundle/release/app-release.aab build/app/outputs/bundle/release/${{ steps.extract_info.outputs.FILE_NAME }}

      - name: Upload Android Release
        uses: actions/upload-artifact@v3
        with:
          name: android-release
          path: build/app/outputs/bundle/release/${{ steps.extract_info.outputs.FILE_NAME }}

  # deploy:
  #   name: Deploy Android Build
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v1
  #   - name: Get Android Build from artifacts
  #     uses: actions/download-artifact@v2
  #     with:
  #       name: android-release
  #   - name: Release Build to internal track
  #     uses: r0adkll/upload-google-play@v1
  #     with:
  #       serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
  #       packageName: <YOUR_PACKAGE_NAME>
  #       releaseFiles: app-release.aab
  #       track: alpha
  #       status: completed
